{
	// Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "Create slice boilerplate": {
    "prefix": "slice",
    "body": [
      "import { createSlice } from '@reduxjs/toolkit'",
      "",
      "const SLICE_NAME = '${1:mySlice}'",
      "",
      "const actionName = (name: string) => `\\${SLICE_NAME}/\\${name}`",
      "",
      "interface ${2:MySliceState} {",
      "}",
      "",
      "const initialState: ${2:MySliceState} = {",
      "}",
      "",
      "export const ${1:mySlice}Slice = createSlice({",
      "  name: SLICE_NAME,",
      "  initialState,",
      "  reducers: {",
      "  }",
      "})",
      ""
    ]
  },
  "Create Thunk boilerplate": {
    "prefix": "thunk",
    "body": [
      "const ${1:myThunk} = createAsyncThunk(",
      "  '${2:actionName}',",
      "  async (${3:params: any}, thunkAPI) => {",
      "    ${4:// body}",
      "  }",
      ")"
    ]
  }
}